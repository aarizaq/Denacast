[General]
ned-path = ../../inetmanet-2.0/src;../src
tkenv-image-path = ../images

# For enabeling realworld connections, choose appropriate scheduler
# UdpOut does only work with SingleHostUnderlay!
# You have to select appropriate outDeviceType in SingleHost configuration
#scheduler-class = TunOutScheduler
#scheduler-class = UdpOutScheduler
# If a realworld connection is desired, debug-on-errors has to be disabled
#debug-on-errors=false
debug-on-errors = true
network = oversim.underlay.simpleunderlay.SimpleUnderlayNetwork

# If an external app should be connected to the simulation, set app-port to the appropriate TCP Port
# Has to be "0" if no external app is used
#externalapp-app-port = 0
# If bigger than zero, accept only n simultaneous app connections
#externalapp-connection-limit = 0

# Change simtime scale (default is picosecond, which is not needed in most overlay
# protocols and limits simulation time to ~100 days)
# Nanoseconds are precise enough, and can run ~300 years
simtime-scale=-9

# --- Application settings ---

# Here ** includes *.overlayTerminal, *.overlayBackboneRouter, *.singleHost

# KBRTestApp settings
**.tier1*.kbrTestApp.kbrOneWayTest = true
**.tier1*.kbrTestApp.kbrRpcTest = false
**.tier1*.kbrTestApp.kbrLookupTest = false
**.tier1*.kbrTestApp.underlayTest = false
**.tier1*.kbrTestApp.testMsgSize = 100B
**.tier1*.kbrTestApp.testMsgInterval = 60s
**.tier1*.kbrTestApp.msgHandleBufSize = 8
**.tier1*.kbrTestApp.lookupNodeIds = true
**.tier1*.kbrTestApp.failureLatency = 10s
**.tier1*.kbrTestApp.onlyLookupInoffensiveNodes = false
#**.tier1*.kbrTestApp.rpcTimeout = -1s
**.tier1*.kbrTestApp.rpcRetries = 0

# i3 settings
**.tier*.i3.triggerTimeToLive = 60  # expiration time for triggers
**.tier*.i3.serverPort = 3072
**.tier*.i3.debugOutput = true

# i3 client settings
**.tier*.serverPort = 3072
**.tier*.clientPort = 3073
**.tier*.triggerRefreshTime = 40s  # time between trigger refreshings
**.tier*.serverTimeout = 100s      # time to wait until server considered unreachable
**.tier*.bootstrapTime = 20s       # time to wait until i3 bootstraps
**.tier*.initTime = 30s            # time to wait after i3 bootstrap to init app
**.tier*.cacheSize = 3             # size of gateway cache
**.tier*.idStoreTime = 600s        # time before discarding a stored id-address pair
**.tier*.sampleRefreshTime = 600s  # time between sample refreshings

# GIASearchApp settings
**.tier1*.giaSearchApp.messageDelay = 60s
**.tier1*.giaSearchApp.randomNodes = true
**.tier1*.giaSearchApp.maximumKeys = 100
**.tier1*.giaSearchApp.maxResponses = 10

#DHT settings
**.tier1*.dht.numReplica = 4
**.tier1*.dht.numGetRequests = 4
**.tier1*.dht.ratioIdentical = 0.5
**.tier1*.dht.secureMaintenance = false
**.tier1*.dht.invalidDataAttack = false
**.tier1*.dht.maintenanceAttack = false
**.tier1*.dht.numReplicaTeams = 3

# DHTTestApp settings
**.tier2*.dhtTestApp.testInterval = 60s
**.tier2*.dhtTestApp.testTtl = 300
**.tier2*.dhtTestApp.p2pnsTraffic = false

# ALMTest settings
**.tier*.almTest.messageLength = 100
**.tier*.almTest.joinGroups = true
**.tier*.almTest.sendMessages = true


# P2PNS settings
**.tier2*.p2pns.twoStageResolution = false
**.tier2*.p2pns.keepaliveInterval = 10s
**.tier2*.p2pns.idCacheLifetime = 60s
**.tier2*.p2pns.registerName = ""

# XmlRpcInterface settings
**.tier3*.xmlRpcInterface.limitAccess=false

#Scribe
**.tier1*.scribe.childTimeout = 60s   # seconds until a node assumes that a particular child has failed
**.tier1*.scribe.parentTimeout = 6s   # seconds until a node assumes that the parent node has failed

# Vast / Quon NTree / SimMud / PubSumMMOG / SimpleGameClient
**.areaDimension = 100
**.tier*.*.numSubspaces = 5
**.tier*.*.playerTimeout = 10s
**.tier*.*.maxMoveDelay = 1s
**.tier*.*.useScenery = false
**.minAOIWidth = 50.0
**.AOIWidth = 50.0
**.movementRate = 6 # in updates per second

#Vast/Quon globalOberserver config
*.globalObserver.globalFunctions[*].function.connectivityProbeIntervall = 60s
*.globalObserver.globalFunctions[*].function.visualizeNetworkIntervall = 0s
*.globalObserver.globalFunctions[*].function.plotConnections = false
*.globalObserver.globalFunctions[*].function.plotBindings = false
*.globalObserver.globalFunctions[*].function.plotMissing = false
*.globalObserver.globalFunctions[*].function.startPlotTime = 0
*.globalObserver.globalFunctions[*].function.plotPeriod = 0
*.globalObserver.globalFunctions[*].function.seed = 4213
*.globalObserver.globalFunctions[*].function.coordinator.Hotspots = ""
*.globalObserver.globalFunctions[*].function.coordinator.HotspotStayTime = 0s

# ------- Coord Based Routing settings -----------------
*.globalObserver.globalFunctions[*].function.coordBasedRouting.areaCoordinateSource = "areas_nodes_2d_15000.xml"
*.globalObserver.globalFunctions[*].function.coordBasedRouting.CBRstartAtDigit = 0
*.globalObserver.globalFunctions[*].function.coordBasedRouting.CBRstopAtDigit = 160
*.globalObserver.globalFunctions[*].function.coordBasedRouting.CBRchangeIdLater = false
*.globalObserver.globalFunctions[*].function.coordBasedRouting.CBRchangeIdStart = 8600s
*.globalObserver.globalFunctions[*].function.coordBasedRouting.CBRchangeIdStop = 18600s

#SimpleGameClient FIXME: Make it independent of tier...
**.tier*.simpleGameClient.movementGenerator = "randomRoaming"
**.tier*.simpleGameClient.movementSpeed = 5.0mps
**.tier*.simpleGameClient.groupSize = 1 # clients >0 per group when GroupRoaming is active
**.tier*.simpleGameClient.useScenery = false # use obstacles on playground ?
**.globalObserver.globalFunctions[*].function.coordinator.seed = 0 # seed for obstacle generation ?

# generic app settings
**.tier*.*.debugOutput = true
**.tier*.*.activeNetwInitPhase = false

# --- Overlay settings ---

# Here ** includes *.overlayTerminal[], *.overlayBackboneRouter[], *overlayAccessRouter[]


# PubSubMMOG
**.overlay*.*.joinDelay = 1s
**.overlay*.*.parentTimeout = 2s
**.overlay*.*.maxChildren = 10
**.overlay*.*.maxMoveDelay = 1s
**.overlay*.*.allowOldMoveMessages = false




# Generic settings
**.overlay*.*.nodeId = ""
**.overlay*.*.debugOutput = true
**.overlay*.*.hopCountMax = 50
**.overlay*.*.recNumRedundantNodes = 3
**.overlay*.*.collectPerHopDelay = false
InetUnderlayNetwork.*.overlay*.*.drawOverlayTopology = false
SingleHostUnderlayNetwork.*.overlay*.*.drawOverlayTopology = false
**.overlay*.*.drawOverlayTopology = true
**.overlay*.*.useCommonAPIforward = false
**.overlay*.*.routingType = "iterative"  #"exhaustive-iterative semi-recursive full-recursive source-routing-recursive"
**.overlay*.*.keyLength = 160
**.overlay*.*.joinOnApplicationRequest = false
**.overlay.*.localPort = 1024
**.overlay*.*.rejoinOnFailure = true
**.overlay*.*.sendRpcResponseToLastHop = true
**.overlay*.*.recordRoute = false
**.overlay*.*.measureAuthBlock = false
**.overlay*.*.dropFindNodeAttack = false
**.overlay*.*.isSiblingAttack = false
**.overlay*.*.invalidNodesAttack = false
**.overlay*.*.dropRouteMessageAttack = false
**.overlay*.*.restoreContext = false

# SimpleMultiOverlayHost settings
**.overlay*.*.overlayId = 0
**.numOverlayModulesPerNode = 10
**.overlay[0].*.localPort = 1024
**.overlay[1].*.localPort = 1025
**.overlay[2].*.localPort = 1026
**.overlay[3].*.localPort = 1027
**.overlay[4].*.localPort = 1028
**.overlay[5].*.localPort = 1029
**.overlay[6].*.localPort = 1030
**.overlay[7].*.localPort = 1031
**.overlay[8].*.localPort = 1032
**.overlay[9].*.localPort = 1033

# general overlay lookup settings
**.overlay*.*.lookupRedundantNodes = 1
**.overlay*.*.lookupParallelPaths = 1
**.overlay*.*.lookupParallelRpcs = 1
**.overlay*.*.lookupVerifySiblings = false
**.overlay*.*.lookupMajoritySiblings = false
**.overlay*.*.lookupMerge = false
**.overlay*.*.lookupUseAllParallelResponses = false
**.overlay*.*.lookupStrictParallelRpcs = false
**.overlay*.*.lookupNewRpcOnEveryTimeout = false
**.overlay*.*.lookupNewRpcOnEveryResponse = false
**.overlay*.*.lookupFinishOnFirstUnchanged = false
**.overlay*.*.lookupVisitOnlyOnce = true
**.overlay*.*.lookupAcceptLateSiblings = true
**.overlay*.*.lookupFailedNodeRpcs = false
**.overlay*.*.routeMsgAcks = false

# bootstrapList configuration
**.bootstrapList.debugOutput = true
**.bootstrapList.mergeOverlayPartitions = false
**.bootstrapList.maintainList = false

# neighbor cache settings
**.neighborCache.enableNeighborCache = false
**.neighborCache.rttExpirationTime = 100s
**.neighborCache.maxSize = 400
**.neighborCache.rttHistory = 10
**.neighborCache.timeoutAccuracyLimit = 0.6
**.neighborCache.defaultQueryType = "exact"
**.neighborCache.defaultQueryTypeI = "available"
**.neighborCache.defaultQueryTypeQ = "exact"
**.neighborCache.doDiscovery = false
**.neighborCache.collectClosestNodes = 0
**.neighborCache.ncsType = "none" #"vivaldi","svivaldi","gnp","nps"
**.neighborCache.ncsPiggybackOwnCoords = true
**.neighborCache.useNcsForTimeout = false

# tree management settings
**.neighborCache.treeMgmtEnableTreeManagement = false
**.neighborCache.treeMgmtBuildInterval = 5s
**.neighborCache.treeMgmtChildrenTimeOut = 10s

**.neighborCache.gvbEnableGlobalViewBuilder = true
**.neighborCache.gvbSendStrategy = "sendAll" # sendAll|simplifyCoords|removeRandom|removeInaccurate|regions|treeTest 
**.neighborCache.gvbCoordSendInterval = 120s
**.neighborCache.gvbOnlyAcceptCompleteCCD = false
**.neighborCache.gvbStrategyRemoveCoordsMode = "percentage"	# percentage|limitCoords|limitTraffic)
**.neighborCache.gvbStrategyRemoveCoordsPercentage = 10
**.neighborCache.gvbStrategyRemoveCoordsCoordsLimit = 10
**.neighborCache.gvbStrategyRemoveCoordsTrafficLimit = 1000
**.neighborCache.gvbStrategyRegionsSizePerDimension = 400
**.neighborCache.gvbStrategyRegionsMaxSpread = 200
**.neighborCache.gvbStrategySimplifyCoordsFactor = 10

**.neighborCache.gvbC2AParameter = "-p 4"
**.neighborCache.gvbDistributeGlobalView = true

# Discovery Mode settings
**.neighborCache.discoveryModeNumSpreadedNodes = 5
**.neighborCache.discoveryModeNumCloseNodes = 5
**.neighborCache.discoveryModeMaxSteps = -1
**.neighborCache.discoveryModeSpreadedSteps = 3

# GNP settings
**.neighborCache.gnpDimensions = 2
**.neighborCache.gnpCoordCalcRuns = 50
**.neighborCache.gnpLandmarkTimeout = 2s

# NPS settings
**.neighborCache.npsMaxLayer = 3

# Vivaldi settings
**.neighborCache.vivaldiShowPosition = false
**.neighborCache.vivaldiErrorConst = 0.95
**.neighborCache.vivaldiCoordConst = 0.25
**.neighborCache.vivaldiDimConst = 2
**.neighborCache.vivaldiEnableHeightVector = false

# SVivaldi settings
**.neighborCache.svivaldiLossConst = 0.001
**.neighborCache.svivaldiLossResetLimit = 0.001

# SimpleNcs settings
**.neighborCache.simpleNcsDelayFaultType = "no_fault"
#possible fault values: live_all, live_planetlab, simulation. everything else: no fault

# cryptoModule settings
SingleHostUnderlayNetwork.overlayTerminal[0].cryptoModule.keyFile = "key.bin"
**.cryptoModule.keyFile = ""

# ---- BaseRpc settings ----

**.rpcUdpTimeout = 1.5s
**.rpcKeyTimeout = 10.0s
**.optimizeTimeouts = false
**.rpcExponentialBackoff = false

# ---- UnderlayConfigurator settings ----

# UnderlayConfigurator module settings
*.underlayConfigurator.transitionTime = 0s
*.underlayConfigurator.measurementTime = -1s
*.underlayConfigurator.gracefulLeaveDelay = 15s
*.underlayConfigurator.gracefulLeaveProbability = 0.5
# disable churn for SingleHost networks
SingleHostUnderlayNetwork.underlayConfigurator.churnGeneratorTypes = ""
# any combination of "NoChurn", "LifetimeChurn", "ParetoChurn" and "RandomChurn" separated by spaces
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"

# ChurnGenerator configuration
*.churnGenerator*.initPhaseCreationInterval = 1s
*.churnGenerator*.targetOverlayTerminalNum = 10
*.churnGenerator*.lifetimeMean = 10000.0s
*.churnGenerator*.deadtimeMean = 10000.0s
*.churnGenerator*.lifetimeDistName = "weibull"
*.churnGenerator*.lifetimeDistPar1 = 1.0
*.churnGenerator*.noChurnThreshold = 0s

# RandomChurn (obsolete)
*.churnGenerator*.targetMobilityDelay = 300s
*.churnGenerator*.targetMobilityDelay2 = 20s
*.churnGenerator*.churnChangeInterval = 0s
*.churnGenerator*.creationProbability = 0.5
*.churnGenerator*.migrationProbability = 0.0
*.churnGenerator*.removalProbability = 0.5

# use globalFunctions?
*.globalObserver.globalFunctions[*].functionType = ""
*.globalObserver.numGlobalFunctions = 0

# global statistics
*.globalObserver.globalStatistics.outputMinMax = false
*.globalObserver.globalStatistics.outputStdDev = false
*.globalObserver.globalStatistics.globalStatTimerInterval = 0s
*.globalObserver.globalStatistics.measureNetwInitPhase = false

# GlobalNodeList settings
*.globalObserver.globalNodeList.maxNumberOfKeys = 100
*.globalObserver.globalNodeList.keyProbability = 0.1
*.globalObserver.globalNodeList.maliciousNodeProbability = 0.0
*.globalObserver.globalNodeList.maliciousNodeChange = false
*.globalObserver.globalNodeList.maliciousNodeChangeStartTime = 200s
*.globalObserver.globalNodeList.maliciousNodeChangeRate = 0.05
*.globalObserver.globalNodeList.maliciousNodeChangeInterval = 100s
*.globalObserver.globalNodeList.maliciousNodeChangeStartValue = 0
*.globalObserver.globalNodeList.maliciousNodeChangeStopValue = 0.5

# GlobalObserver configuration
*.globalObserver.globalTraceManager.traceFile = ""
*.globalObserver.globalParameters.printStateToStdOut = false
*.globalObserver.globalParameters.topologyAdaptation = false


# SimpleUnderlayNetwork configuration
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms
SimpleUnderlayNetwork.overlayTerminal*.tcp.constantDelay = 50ms
SimpleUnderlayNetwork.overlayTerminal*.udp.useCoordinateBasedDelay = true
SimpleUnderlayNetwork.overlayTerminal*.tcp.useCoordinateBasedDelay = true
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1
SimpleUnderlayNetwork.overlayTerminal*.tcp.jitter = 0.1
SimpleUnderlayNetwork.overlayTerminal*.udp.enableAccessRouterTxQueue = false
SimpleUnderlayNetwork.underlayConfigurator.terminalTypes = "oversim.underlay.simpleunderlay.SimpleOverlayHost"
SimpleUnderlayNetwork.underlayConfigurator.fieldSize = 150 # not used, if nodeCoordinateSource is set
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 1MiB
SimpleUnderlayNetwork.underlayConfigurator.fixedNodePositions = false
SimpleUnderlayNetwork.underlayConfigurator.nodeCoordinateSource = "nodes_2d_15000.xml" # contains 15.000 nodes, leave blank if random coordinates should be used!
#SimpleUnderlayNetwork.underlayConfigurator.nodeCoordinateSource = "nodes_2d.xml" # contains >200.000 nodes, but needs more memory
#SimpleUnderlayNetwork.underlayConfigurator.nodeCoordinateSource = "nodes_3d.xml" # contains >200.000 nodes, but needs more memory
SimpleUnderlayNetwork.underlayConfigurator.useIPv6Addresses = false
SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # only 10MBit ethernet nodes (defined in common/channels.ned)
#SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline oversim.common.simple_dsl" # here with additional dsl nodes
#SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline_lossy oversim.common.simple_dsl_lossy" # same with packet loss
SimpleUnderlayNetwork.churnGenerator*.channelTypesRx = "" # only 10MBit ethernet nodes (defined in common/channels.ned)
#possible fault values: live_all, live_planetlab, simulation. everything else: no fault
SimpleUnderlayNetwork.overlayTerminal*.udp.delayFaultType = "no_fault"
SimpleUnderlayNetwork.overlayTerminal*.tcp.delayFaultType = "no_fault"

# SingleHostUnderlay configuration
SingleHostUnderlayNetwork.underlayConfigurator.terminalTypes = "dummy"
SingleHostUnderlayNetwork.underlayConfigurator.nodeIP = ""
SingleHostUnderlayNetwork.underlayConfigurator.nodeInterface = ""
SingleHostUnderlayNetwork.underlayConfigurator.stunServer = ""
SingleHostUnderlayNetwork.underlayConfigurator.bootstrapIP = ""
SingleHostUnderlayNetwork.underlayConfigurator.bootstrapPort = 1024
SingleHostUnderlayNetwork.zeroconfConnector.enableZeroconf = false
SingleHostUnderlayNetwork.zeroconfConnector.serviceType = "_p2pbootstrap._udp"
SingleHostUnderlayNetwork.zeroconfConnector.serviceName = "OverSim"
SingleHostUnderlayNetwork.zeroconfConnector.overlayName = "oversim.p2p"
SingleHostUnderlayNetwork.overlayTerminal[0].outDeviceType = "oversim.underlay.singlehostunderlay.UdpOutDevice"

# InetUnderlayNetwork configuration
InetUnderlayNetwork.outRouter*.outDeviceType = "oversim.underlay.singlehostunderlay.TunOutDevice"
**.mtu = 65000B
**.parser = "oversim.common.GenericPacketParser"
**.appParser = "oversim.common.GenericPacketParser"
**.gatewayIP = ""

# InetUnderlay IPv4 and IPv6 backbone configuration
InetUnderlayNetwork.underlayConfigurator.terminalTypes = "oversim.underlay.inetunderlay.InetOverlayHost"
InetUnderlayNetwork6.underlayConfigurator.terminalTypes = "oversim.underlay.inetunderlay.ipv6.InetOverlayHost6"
InetUnderlayNetwork*.*ccessRouter[*].accessNet.channelTypes = "oversim.common.inet_ethernetline oversim.common.inet_dsl"
InetUnderlayNetwork*.*ccessRouter[*].accessNet.channelTypesRx = ""
InetUnderlayNetwork*.churnGenerator*.channelTypes = "" # not used in InetUnderlay
InetUnderlayNetwork*.churnGenerator*.channelTypesRx = "" # not used in InetUnderlay
InetUnderlayNetwork*.backboneRouterNum = 1
InetUnderlayNetwork*.overlayBackboneRouterNum = 0
InetUnderlayNetwork*.accessRouterNum = 2
InetUnderlayNetwork*.overlayAccessRouterNum = 0
InetUnderlayNetwork*.connectivity = 0.8
InetUnderlayNetwork*.underlayConfigurator.startIPv4 = "1.1.0.1"
InetUnderlayNetwork*.underlayConfigurator.startIPv6 = "1::"
InetUnderlayNetwork*.outRouterNum = 0
InetUnderlayNetwork6.*Router[*].routingTable6.routingTableFile = xmldoc("dummy.xml")
InetUnderlayNetwork6.*overlayTerminal[*].routingTable6.routingTableFile = xmldoc("dummy.xml")

# ReaSEUnderlay backbone configuration
ReaSEUnderlayNetwork.underlayConfigurator.terminalTypes = "oversim.underlay.reaseunderlay.ReaSEOverlayHost"
ReaSEUnderlayNetwork.churnGenerator*.channelTypes = "" # not used in ReaSEUnderlay
ReaSEUnderlayNetwork.churnGenerator*.channelTypesRx = "" # not used in ReaSEUnderlay
# configuration for using ReaSE framework
**.connectionManager.simulationDuration = 2000s
**.trafficProfileManager.configFileName = "./traffic_profiles.parameters"
# ReaSE host configuration parameters
**.namid = -1 #auto
**.maxTCPThreadCount = 100
**.inetUser.startTime = uniform(0s,300s)
**.noThreads = 300

# TCP parameters
#**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"

# default overlay and application
# Here ** includes *.globalObserver.globalTraceManager and *.churnGenerator*
#**.overlayType = "oversim.overlay.chord.ChordModules"
#**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
#**.tier2Type = "oversim.common.TierDummy"
**.tier3Type = "oversim.common.TierDummy"
**.numTiers = 1

